Browser → Web Server (Waitress) → [WSGI] → Flask App → Your Python code → Response




1*    {
      name: "LCP",  // Largest Contentful Paint
      value: 2500,  // milliseconds
      ...
    }





def clean(func):
    def wrapper():
        print("Wash hands")
        func()
    return wrapper

@clean
def eat(): # This Function will be sent ot the clean function as a parameter so we can Run this inside another Funtion
    print("Eat food")









def fixed_decorator(f):
    @functools.wraps(f)
    def wrapper():
        print("Calling decorated function")
        return f()
    return wrapper
@app.route('/hello')
@fixed_decorator
def hello():
    return "Hello!"




| Database       | Type                           | Where it fits           | Real Use                         |
| -------------- | ------------------------------ | ----------------------- | -------------------------------- |
| **SQLite**     | ✅ File-based                   | Local file (`.db`)      | Testing, prototypes, mobile apps |
| **MySQL**      | ✅ Server-based                 | Needs DB server running | Web apps, shared hosting         |
| **PostgreSQL** | ✅ Server-based                 | Needs DB server         | Web apps, enterprise systems     |
| **MongoDB**    | ✅ Server-based (NoSQL)         | Runs as a service       | Real-time apps, document storage |
| **Firebase**   | ✅ Backend-managed (Cloud)      | Fully cloud-managed     | Mobile/web apps                  |
| **Supabase**   | ✅ Backend-managed (PostgreSQL) | Cloud-based             | Full-stack cloud apps            |
